#version 400

in vec2 texCoord;

out vec4 outputColor;

uniform sampler2D shaderTexture;
uniform float screenWidth;
uniform float screenHeight;
uniform float blurType;

void main(void){
  float texelSize;
  vec2 texCoord1, texCoord2, texCoord3, texCoord4, texCoord5, texCoord6, texCoord7, texCoord8, texCoord9;
  float weight0, weight1, weight2, weight3, weight4;
  float normalization;
  vec4 color;

  if(blurType < 0.1f){
    texelSize = 1.0f / screenWidth;

    texCoord1 = texCoord + vec2(texelSize * -4.0f, 0.0f);
    texCoord2 = texCoord + vec2(texelSize * -3.0f, 0.0f);
    texCoord3 = texCoord + vec2(texelSize * -2.0f, 0.0f);
    texCoord4 = texCoord + vec2(texelSize * -1.0f, 0.0f);
    texCoord5 = texCoord + vec2(texelSize * 0.0f, 0.0f);
    texCoord6 = texCoord + vec2(texelSize * 1.0f, 0.0f);
    texCoord7 = texCoord + vec2(texelSize * 2.0f, 0.0f);
    texCoord8 = texCoord + vec2(texelSize * 3.0f, 0.0f);
    texCoord9 = texCoord + vec2(texelSize * 4.0f, 0.0f);
  }else{
    texelSize = 1.0f / screenHeight;

    texCoord1 = texCoord + vec2(0.0f, texelSize * -4.0f);
    texCoord2 = texCoord + vec2(0.0f, texelSize * -3.0f);
    texCoord3 = texCoord + vec2(0.0f, texelSize * -2.0f);
    texCoord4 = texCoord + vec2(0.0f, texelSize * -1.0f);
    texCoord5 = texCoord + vec2(0.0f, texelSize * 0.0f);
    texCoord6 = texCoord + vec2(0.0f, texelSize * 1.0f);
    texCoord7 = texCoord + vec2(0.0f, texelSize * 2.0f);
    texCoord8 = texCoord + vec2(0.0f, texelSize * 3.0f);
    texCoord9 = texCoord + vec2(0.0f, texelSize * 4.0f);
  }

  weight0 = 1.0f;
  weight1 = 0.9f;
  weight2 = 0.55f;
  weight3 = 0.18f;
  weight4 = 0.1f;

  normalization = (weight0 + 2.0f * (weight1 + weight2 + weight3 + weight4));

  weight0 = weight0 / normalization;
  weight1 = weight1 / normalization;
  weight2 = weight2 / normalization;
  weight3 = weight3 / normalization;
  weight4 = weight4 / normalization;

  color = vec4(0.0f, 0.0f, 0.0f, 0.0f);

  color += texture(shaderTexture, texCoord1) * weight4;
  color += texture(shaderTexture, texCoord2) * weight3;
  color += texture(shaderTexture, texCoord3) * weight2;
  color += texture(shaderTexture, texCoord4) * weight1;
  color += texture(shaderTexture, texCoord5) * weight0;
  color += texture(shaderTexture, texCoord6) * weight1;
  color += texture(shaderTexture, texCoord7) * weight2;
  color += texture(shaderTexture, texCoord8) * weight3;
  color += texture(shaderTexture, texCoord9) * weight4;

  color.a = 1.0f;

  outputColor = color;
}
